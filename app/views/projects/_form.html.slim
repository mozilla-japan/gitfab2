== nested_form_for [@owner, @project], html: {class: "project-form"} do |f|
  - if @project.errors.any?
    #error_explanation
      h2
        == pluralize(@project.errors.count, "error")
        'prohibited this user from being saved:
      ul
        - @project.errors.full_messages.each do |msg|
          li == msg
  - if @project.new_record? && @owner.is_a?(User) && @owner.groups.any?
    #owner
      'Project owner is
      - options = []
      - @owner.groups.to_a.push(@owner).each do |o|
        - action = o.instance_of?(Group) ? group_projects_path(group_id: o.slug) : user_projects_path(user_id: o.slug)
        - options.push [o.name, action]
      == f.select :owner_id, options, selected: user_projects_path(user_id: current_user.slug)
  #basic-information
    == f.text_field :title, placeholder: "Input Project Title", tabindex: 1
    == f.text_field :name, placeholder: "Input_Repository_Name"
    #project-summary
      section.visual style="background-image: url('#{@project.figures.first.try :content}'); background-size: cover;" data-no-image-url="url(#{asset_path 'fallback/noise-7ms-a.gif'})"
        .figure-form-wrapper
          == link_to "Upload Image File…", "", title: "upload-image", id: "photo-upload-btn", class: "btn"
          == f.fields_for :figures do |ff|
            == ff.select :_type, [["Photo", Figure::Photo.name], ["Video", Figure::Video.name]]
            == ff.file_field :content, accept: 'image/png, image/gif, image/jpeg, image/jpg'
            == ff.text_field :link
            == ff.hidden_field :content_cache
          == f.link_to_add "Add a figure", :figures
          == link_to "×", "", title: "remove-image", id: "remove-image-btn", class: "btn"

      section.description
        h1
          'Summary
        == f.text_area :description, placeholder: "Add Summary", tabindex: 3, class: "link-textarea"

  #filesize-caution
    p
      'File Size Limit Exceed on an upload (3MB).
    p
      'You have to divide the file uploading or have to change the uploaded files on this session to less size ones.

  .buttons
    - if @project.new_record?
      == f.submit value: "Create Project", class: "btn"
      == link_to "Cancel", :back, class: "cancel-btn btn"
    - else
      == f.submit value: "Update Project", class: "btn"
      == link_to "Cancel", project_path(owner_name: @owner.slug, id: @project.id), class: "btn"
      == link_to "Delete Project", project_path(owner_name: @owner.slug, id: @project.id), method: :delete, class: "btn"

- content_for :bottom do
  coffee:
    $(".fancybox").fancybox
      openEffect: "none"
      closeEffect: "none"
      wrapCSS: ".fork-popup"
      helpers:
        overlay:
          css:
            "background":"rgba(0, 0, 0, 0.2)"

    $ ->
      w = window

      $(document).on "submit", ".project-form", (event) ->
        action = $("#project_owner_id").val()
        $(".project-form").attr "action", action

      $(document).on "keypress", "input:not(.allow_submit)", (event) -> event.which != 13

      $(document).on "click", "#save-btn", (event, data) ->
        $('form#new_project').submit()

      $(document).on "change", "select#project_group_id", (event) ->
        $("#new_project").attr "action", $(this).val()


      # TODO: refactoring Task #14460
      # working with .visual image&video upload

      $(document).on "click", "#photo-upload-btn", (event) ->
        event.preventDefault()
        if($("input[type='file']").length is 0)
          $(".add_nested_fields:first").trigger "click"
        $("input[type='file']:first").trigger "click"

      $(document).on "change", "input[type='file']", (event) ->
        file = event.target.files[0]
        reader = new FileReader()
        reader.onload = ->
          tmp_img = new Image
          tmp_img.src = reader.result
          $("section.visual").css "background-image", "url('#{reader.result}')"
          $("section.visual iframe").attr "src", ""
          $("#photo-upload-btn").css "color", "black"
          $("#input-video-url-btn").css "color", "black"
          $("section.visual").css "height", "#{703.0 / tmp_img.naturalWidth * tmp_img.naturalHeight}px"
        reader.readAsDataURL file

      disableVideoSubmitButton = ->
        $("#caution").css "display", "block"
        $("iframe.video-form-preview").attr "src", ""
        $(".ok-btn").addClass "disabled"

      YOUTUBE_URL_MIN_LENGTH   = 41
      YOUTUBE_EMBED_URL_BASE   = "http://www.youtube.com/embed/"
      # TODO: constantize '11'
      YOUTUBE_WATCH_URL_REGEXP = /https?:\/\/(?:www\.)?youtube.com\/watch\?v=([^&]{11,})(&\S*)?$/
      VIDEOID_MATCH_INDEX      = 1
      getVideo = ->
        url = $(this).val()
        if w.previous_url != url
          w.previous_url = url
          if url.length > YOUTUBE_URL_MIN_LENGTH
            if matched = url.match YOUTUBE_WATCH_URL_REGEXP
              w.videoId = matched[VIDEOID_MATCH_INDEX]
              embed_url = YOUTUBE_EMBED_URL_BASE + w.videoId
              $("iframe.video-form-preview").attr "src", embed_url
              $("#caution").css "display", "none"
              $(".ok-btn").removeClass "disabled"
            else
              $("#caution").text "Invalid YouTube URL"
              disableVideoSubmitButton()
          else
            $("#caution").text "URL is too short. URL length #{url.length}. Min length = 42."
            disableVideoSubmitButton()

      $(document).on "keyup", "input#youtube-url-input", getVideo
      $(document).on "change", "input#youtube-url-input", getVideo

      $(document).on "click", "#video-form-buttons .ok-btn", (event) ->
        event.preventDefault()
        if $(this).hasClass "disabled"
          return false
        else
          if $("section.visual iframe").length < 1
            $("section.visual").prepend "<iframe/>"
          $("section.visual iframe").attr "src", $("iframe.video-form-preview").attr("src")
          $("input#video-id-field").val w.videoId
          $.fancybox.close()

      $(document).on "click", "#video-form-buttons .cancel-btn", (event) ->
        event.preventDefault()
        $.fancybox.close()

      $(document).on "click", "#remove-image-btn", (event) ->
        event.preventDefault()
        noImageUrl = $("section.visual").attr("data-no-image-url")
        $("section.visual").css "background-image", noImageUrl
        $("section.visual iframe").attr "src", ""
        $("input#project_photo").val ""
        $("input#video-id-field").val ""

      # TODO: refactoring Task #14460
      # working with status form & way form image&video upload

      $(document).on "click", ".photo-upload-btn", (event) ->
        event.preventDefault()
        $(this).siblings(".file-field").trigger "click"

      $(document).on "change", ".file-field", (event) ->
        target = event.target
        imageField = $(this).closest ".image-field"
        file = target.files[0]
        reader = new FileReader
        reader.onload = ->
          imageField.css "background-image", "url('#{reader.result}')"
          $(imageField).find("iframe").attr "src",""

        reader.readAsDataURL file

      $(document).on "click", ".input-video-url-btn", (event) ->
        event.preventDefault()
        w.targetImageField = $(this).parents ".image-field"
        target = $(this).siblings ".video-form"
        $.fancybox target

      $(document).on "click", ".video-form-buttons .ok-btn", (event) ->
        event.preventDefault()
        if $(this).hasClass "disabled"
          return false
        else
          imageField = w.targetImageField
          if $(imageField).find("iframe").length < 1
            $(imageField).prepend "<iframe/>"
          embed_url = YOUTUBE_EMBED_URL_BASE + w.videoIdForItem
          $(imageField).find("iframe").attr "src", embed_url
          $(this).parents(".video-form").find(".video-id-field").val w.videoIdForItem
          w.videoIdForItem = ""
          w.targetImageField = ""
          $.fancybox.close()

      $(document).on "click", ".video-form-buttons .cancel-btn", (event) ->
        event.preventDefault()
        $.fancybox.close()

      $(document).on "click", ".image-field .remove-image-btn", (event) ->
        event.preventDefault()
        imageField = $(this).parents ".image-field"
        noImageUrl = $(imageField).attr("data-no-image-url")
        $(imageField).css "background-image", noImageUrl
        $(imageField).find("iframe").attr "src", ""
        $(imageField).find(".file-field").val ""
        $(imageField).find(".video-form .video-id-field").val ""

      disableVideoSubmitButtonForItems = ->
        $(".caution").css "display", "block"
        $("iframe.video-form-preview").attr "src", ""
        $(".ok-btn").addClass "disabled"

      getVideoForItems = ->
        url = $(this).val()
        if w.previous_url != url
          videoForm = $(this).closest ".video-form"
          w.previous_url = url
          if url.length > YOUTUBE_URL_MIN_LENGTH
            if matched = url.match YOUTUBE_WATCH_URL_REGEXP
              w.videoIdForItem = matched[VIDEOID_MATCH_INDEX]
              embed_url = YOUTUBE_EMBED_URL_BASE + w.videoIdForItem
              $(videoForm).find("iframe.video-form-preview").attr "src", embed_url
              $(videoForm).find(".caution").css "display", "none"
              $(videoForm).find(".ok-btn").removeClass "disabled"
            else
              $(videoForm).find(".caution").text "Invalid YouTube URL"
              disableVideoSubmitButtonForItems()
          else
            $(videoForm).find("#caution").text "URL is too short. URL length #{url.length}. Min length = 42."
            disableVideoSubmitButtonForItems()

      $(document).on "keyup", "input.youtube-url-input", getVideoForItems
      $(document).on "change", "input.youtube-url-input", getVideoForItems
