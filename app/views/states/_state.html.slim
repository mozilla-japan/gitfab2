article class="card state" data-position="#{card.try(:position)}" id="#{card.id}"
  h1.number
  .arrow-column
    .arrow-head
  .article-column
    .card-content
      .header
        == render "components/card_title", card: card
        .control
          - if can? :manage, card
            - edit_url = edit_project_recipe_state_path(owner_name: @owner.slug, project_id: @project.name, recipe: @project.recipe, id: card.id)
            - delete_url = project_recipe_state_path(owner_name: @owner.slug, project_id: @project.name, recipe: @project.recipe, id: card.id)
            == link_to "Edit", edit_url, remote: true, class: "btn edit-card", "data-container" => ".card", "data-list" => "#recipe-card-list"
            == link_to "Delete", delete_url, remote: true, method: :delete, class: "btn delete-card", "data-container" => ".card"
            == link_to "Convert to Annotation", "#", class: "btn convert-card"
            .order-tools
              == link_to "", "#", class: "order-up-btn"
              == link_to "", "#", class: "order-down-btn"

          .show-comments-btn
            .comment-icon.icon
            .count
              == card.comments.length
          == render "components/card_contributors", card: card
      .body
        == render "components/card_description", card: card
        == render "components/card_figures", card: card
        == render "components/card_attachments", card: card

      .footer
        == render "components/card_comments", card: card, resources: [@owner, @project, :recipe, card]

    ul.annotation-list
      - card.annotations.ordered_by_position.each do |annotation|
        li.card-wrapper.annotation-wrapper
          == render "annotations/annotation", annotation: annotation, parent: card
    - if signed_in?
      - new_annotation_url = new_project_recipe_state_annotation_path(owner_name: @owner.slug, project_id: @project.name, state_id: card.id)
      == link_to "Add Annotation", new_annotation_url, remote: true, class: "btn new-card",
        "data-list" => "##{card.id} .annotation-list",
        "data-classname" => "annotation-wrapper",
        "data-template" => "#annotation-template"

  .update-state
    == nested_form_for [@owner, @project, :recipe, card], remote: true do |f|
      == f.fields_for :annotations do |ff|
        == ff.text_field :position, class: "position", "data-id" => ff.object.id
        == ff.hidden_field :id, class: "id"
      == f.link_to_add "Add Annotation Order", :annotations, class: "add-annotation-order"
      == f.submit "submit", class: "submit-annotation-order"
